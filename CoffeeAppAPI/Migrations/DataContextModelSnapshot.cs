// <auto-generated />
using System;
using CoffeeAppAPI.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CoffeeAppAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CoffeeAppAPI.Models.Coffee.Coffee", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("coffeeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("Coffees");

                    b.HasData(
                        new
                        {
                            id = new Guid("e0f68528-dfa6-4d83-9d52-cff38716b9ec"),
                            coffeeName = "Cafe latte",
                            price = 44.0
                        },
                        new
                        {
                            id = new Guid("ebfe67bf-80b9-4b5c-82b9-a2851a4ab242"),
                            coffeeName = "Cafe mocha",
                            price = 52.0
                        },
                        new
                        {
                            id = new Guid("6386fdf9-e734-4430-b53b-9260f2a7670a"),
                            coffeeName = "Chai latte",
                            price = 47.0
                        });
                });

            modelBuilder.Entity("CoffeeAppAPI.Models.LoyaltyPoint.LoyaltyPoint", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("cashValue")
                        .HasColumnType("double precision");

                    b.Property<int>("pointValue")
                        .HasColumnType("integer");

                    b.Property<bool>("redeemed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.ToTable("LoyaltyPoints");

                    b.HasData(
                        new
                        {
                            id = new Guid("6d2dde63-94c7-4c22-8341-b05ccd7d8ef6"),
                            cashValue = 10.0,
                            pointValue = 1,
                            redeemed = false,
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        });
                });

            modelBuilder.Entity("CoffeeAppAPI.Models.Purchase.Purchase", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Allocated")
                        .HasColumnType("boolean");

                    b.Property<string>("LoyaltyPointId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("coffeeId")
                        .HasColumnType("uuid");

                    b.Property<string>("purchaseDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            id = new Guid("a412e01e-1b18-4ec4-9e79-17f2a2c012c3"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("e0f68528-dfa6-4d83-9d52-cff38716b9ec"),
                            purchaseDate = "2023/04/23 01:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("35d2e39e-1217-49de-b85f-9f39fa2a3948"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("ebfe67bf-80b9-4b5c-82b9-a2851a4ab242"),
                            purchaseDate = "2023/04/23 01:49:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("be55517c-b858-437a-b85e-55efede53409"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("e0f68528-dfa6-4d83-9d52-cff38716b9ec"),
                            purchaseDate = "2023/05/05 01:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("19d94460-0bc1-4d73-9dfb-9aa88cae71ad"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("ebfe67bf-80b9-4b5c-82b9-a2851a4ab242"),
                            purchaseDate = "2023/05/04 01:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("0951748c-770a-4bcc-831a-09df18d33ac2"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("ebfe67bf-80b9-4b5c-82b9-a2851a4ab242"),
                            purchaseDate = "2023/04/24 01:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("a8db2f20-b280-49dc-93a8-f21a43cb8ba9"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("e0f68528-dfa6-4d83-9d52-cff38716b9ec"),
                            purchaseDate = "2023/05/03 01:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("ac01a251-1cbe-4474-86b5-29592ed1f972"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("ebfe67bf-80b9-4b5c-82b9-a2851a4ab242"),
                            purchaseDate = "2023/04/30 01:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("fe86a5bb-c91a-4868-adfe-55c643713f22"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("ebfe67bf-80b9-4b5c-82b9-a2851a4ab242"),
                            purchaseDate = "2023/04/23 06:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("75ddb6bd-962a-4df4-9f1e-2c24014dd2e7"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("6386fdf9-e734-4430-b53b-9260f2a7670a"),
                            purchaseDate = "2023/04/25 01:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("58043290-7448-472a-88cf-e4094e3497e8"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("6386fdf9-e734-4430-b53b-9260f2a7670a"),
                            purchaseDate = "2023/04/29 01:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("e6989459-d332-492b-a163-3b7c7ef6d884"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("e0f68528-dfa6-4d83-9d52-cff38716b9ec"),
                            purchaseDate = "2023/04/24 01:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("5aa6dcb8-0f6d-47d1-b507-3a694825c70e"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("e0f68528-dfa6-4d83-9d52-cff38716b9ec"),
                            purchaseDate = "2023/04/27 01:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        },
                        new
                        {
                            id = new Guid("de62afa3-aeb1-4ad2-bf0a-60a1eb1120b0"),
                            Allocated = true,
                            LoyaltyPointId = "6d2dde63-94c7-4c22-8341-b05ccd7d8ef6",
                            coffeeId = new Guid("e0f68528-dfa6-4d83-9d52-cff38716b9ec"),
                            purchaseDate = "2023/04/25 01:09:49",
                            userId = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56")
                        });
                });

            modelBuilder.Entity("CoffeeAppAPI.Models.User.Customer", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            id = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56"),
                            name = "Test1 Name",
                            phoneNumber = "0813066747",
                            surname = "Test1 Surname"
                        },
                        new
                        {
                            id = new Guid("05b74359-7a8b-4e53-8977-52e3afbb3e59"),
                            name = "Test2 Name",
                            phoneNumber = "0813077747",
                            surname = "Test2 Surname"
                        },
                        new
                        {
                            id = new Guid("c08a27eb-9818-4b43-b465-a09a11b40b2f"),
                            name = "Test3 Name",
                            phoneNumber = "0813088747",
                            surname = "Test3 Surname"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
