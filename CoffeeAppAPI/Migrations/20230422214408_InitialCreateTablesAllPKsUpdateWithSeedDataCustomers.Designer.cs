// <auto-generated />
using System;
using CoffeeAppAPI.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CoffeeAppAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230422214408_InitialCreateTablesAllPKsUpdateWithSeedDataCustomers")]
    partial class InitialCreateTablesAllPKsUpdateWithSeedDataCustomers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CoffeeAppAPI.Models.Coffee.Coffee", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("coffeeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("price")
                        .HasColumnType("double precision");

                    b.HasKey("id");

                    b.ToTable("Coffees");
                });

            modelBuilder.Entity("CoffeeAppAPI.Models.LoyaltyPoint.LoyaltyPoint", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("cashValue")
                        .HasColumnType("double precision");

                    b.Property<int>("pointValue")
                        .HasColumnType("integer");

                    b.Property<bool>("redeemed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.ToTable("LoyaltyPoints");
                });

            modelBuilder.Entity("CoffeeAppAPI.Models.Purchase.Purchase", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Allocated")
                        .HasColumnType("boolean");

                    b.Property<string>("LoyaltyPointId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("coffeeId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("purchaseDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("userId")
                        .HasColumnType("uuid");

                    b.HasKey("id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("CoffeeAppAPI.Models.User.Customer", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            id = new Guid("3b67ae4e-6729-4a34-94bb-0efdfcb2db56"),
                            name = "Test1 Name",
                            phoneNumber = "0813066747",
                            surname = "Test1 Surname"
                        },
                        new
                        {
                            id = new Guid("05b74359-7a8b-4e53-8977-52e3afbb3e59"),
                            name = "Test2 Name",
                            phoneNumber = "0813077747",
                            surname = "Test2 Surname"
                        },
                        new
                        {
                            id = new Guid("c08a27eb-9818-4b43-b465-a09a11b40b2f"),
                            name = "Test3 Name",
                            phoneNumber = "0813088747",
                            surname = "Test3 Surname"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
